import os
import paramiko

def copy_file(source_path, destination_path, file_size_limit):
    try:
        transport = paramiko.Transport('REMOTE_COMPUTER_IP', 22)  # Replace with the actual IP address of the remote computer
        transport.connect(username='USERNAME', password='PASSWORD')  # Replace with the actual username and password
        sftp = paramiko.SFTPClient.from_transport(transport)

        remote_file_size = sftp.stat(source_path).st_size
        if remote_file_size <= file_size_limit:
            sftp.get(source_path, destination_path)
            print(f"File {source_path} copied to {destination_path} successfully.")
        else:
            print(f"File {source_path} size exceeds the specified limit and will not be copied.")

        sftp.close()
        transport.close()

    except paramiko.SSHException as e:
        print(f"SSH Error: {e}")
    except paramiko.AuthenticationException:
        print("Authentication Error: Check your username and password.")
    except FileNotFoundError:
        print(f"Remote file {source_path} not found.")
    except Exception as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    # Replace the following variables with the actual values
    remote_files = [
        {'source_path': '/path/to/remote/file1.txt', 'destination_path': 'local/file1.txt', 'file_size_limit': 100000},
        {'source_path': '/path/to/remote/file2.txt', 'destination_path': 'local/file2.txt', 'file_size_limit': 500000},
        # Add more files as needed
    ]

    for file_info in remote_files:
        copy_file(file_info['source_path'], file_info['destination_path'], file_info['file_size_limit'])
